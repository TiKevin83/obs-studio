uniform float4x4 ViewProj;
uniform texture2d image;

uniform bool switchLeftToRight;
uniform float2 pixel_size;

sampler_state textureSampler {
	Filter    =Linear;
	AddressU = Clamp;
	AddressV  =Clamp;
};

struct VertData
{
    float4 pos : POSITION;
    float2 uv : TEXCOORD0;
};

float4 pixel(float2 uv)
{
    return image.Sample(textureSampler, uv);
}

VertData VSDefault(VertData v_in)
{
    VertData vert_out;
    vert_out.pos = mul(float4(v_in.pos.xyz, 1.0), ViewProj);
    vert_out.uv = v_in.uv;
    return vert_out;
}

float4 mainImage(VertData v_in) : TARGET
{
    float2 pos = v_in.uv / pixel_size.xy;
    float2 coord = floor(fmod(pos, 2.0));

    if (coord.x <= 0.003)
    {
        return image.Sample(textureSampler, v_in.uv);
    }
    else
    {
            return image.Sample(textureSampler, float2(v_in.uv.x - pixel_size.xy.x, v_in.uv.y));
    }
}

technique Draw
{
    pass
    {
        vertex_shader = VSDefault(v_in);
        pixel_shader = mainImage(v_in);
    }
}